tosca_definitions_version: tosca_simple_yaml_1_0_0_wd03

template_name: artifact-test-types
template_author: Alien4cloud
template_version: 1.0.0-SNAPSHOT

imports:
  - tosca-normative-types:1.0.0-SNAPSHOT
  - alien-base-types:1.2.0-SNAPSHOT
  - tomcat-war-types:2.0.0-SNAPSHOT

description: Tomcat recipe, including war type and relationship.

node_types:

  alien.nodes.TestArtifactDirectory:
    derived_from: tosca.nodes.SoftwareComponent
    requirements:
      - test_requirement: alien.capabilities.TestCapability
    capabilities:
      test_capability:
        type: alien.capabilities.TestCapability
    artifacts:
      - confs_directory: conf
        type: tosca.artifacts.File
    interfaces:
      Standard:
        create:
          inputs:
            REQUIREMENT_PROPERTY: { get_property: [SELF, test_requirement, test_capability_property] }
            CAPABILITY_PROPERTY: { get_property: [SELF, test_capability, test_capability_property] }
          implementation: scripts/assertDirectoryCopied.sh

  alien.nodes.WarWithLifeCycleScript:
    derived_from: alien.nodes.War
    description: A war element with lifecycle operation implemented
    interfaces:
      Standard:
        create: scripts/create.sh

capability_types:

  alien.capabilities.TestCapability:
    derived_from: tosca.capabilities.Root
    properties:
      test_capability_property:
        type: string

relationship_types:

  alien.relationships.WarHostedOnTomcatWithProperties:
    derived_from: alien.relationships.WarHostedOnTomcat
    artifacts:
      - properties_file: conf/settings.properties
        type: tosca.artifacts.File
    interfaces:
      configure:
        post_configure_source:
          inputs:
            CONTEXT_PATH: { get_property: [SOURCE, context_path] }
            TOMCAT_HOME: { get_property: [TARGET, tomcat_home] }
          implementation: scripts/tomcat_install_war.sh
        post_configure_target: scripts/configureProperties.sh




tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/3.4/types.yaml
  - http://www.getcloudify.org/spec/openstack-plugin/1.3.1/plugin.yaml
  - http://www.getcloudify.org/spec/diamond-plugin/1.3.1/plugin.yaml

node_types:
  alien.nodes.openstack.Compute:
    derived_from: cloudify.openstack.nodes.Server
    properties:
      _a4c_substitute_for:
        default: []
      _a4c_att_ip_address:
        default:
          function: get_attribute
          parameters:
            - SELF
            - ip
      _a4c_att_public_ip_address:
        default:
          function: get_attribute
          parameters:
            - TARGET
            - cloudify.openstack.server_connected_to_floating_ip
            - floating_ip_address
  alien.nodes.openstack.PrivateNetwork:
    derived_from: cloudify.openstack.nodes.Network
    properties:
      _a4c_substitute_for:
        default: []
  alien.nodes.openstack.PublicNetwork:
    derived_from: cloudify.openstack.nodes.FloatingIP
    properties:
      _a4c_substitute_for:
        default: []

  alien.nodes.Apache:
    derived_from: cloudify.nodes.WebServer
  alien.nodes.PHP:
    derived_from: cloudify.nodes.SoftwareComponent
  alien.nodes.Wordpress:
    derived_from: cloudify.nodes.ApplicationModule
  alien.nodes.Mysql:
    derived_from: cloudify.nodes.Database

relationships:
  alien.relationships.WordpressHostedOnApache:
    derived_from: cloudify.relationships.contained_in
  alien.relationships.WordpressConnectToPHP:
    derived_from: cloudify.relationships.connected_to
  alien.relationships.WordpressConnectToMysql:
    derived_from: cloudify.relationships.connected_to

node_templates:

  DataBase:
    type: alien.nodes.openstack.Compute
    properties: 
      flavor: 2
      image: 02ddfcbb-9534-44d7-974d-5cfd36dfbcab
      cloudify_agent: 
        user: ubuntu
    relationships:
      - target: InternalNetwork
        type: cloudify.relationships.connected_to
      - target: _a4c_InternalNetwork_subnet
        type: cloudify.relationships.depends_on
    interfaces:
      cloudify.interfaces.monitoring_agent:
        install:
          implementation: diamond.diamond_agent.tasks.install
          inputs:
            diamond_config:
               interval: 1
        start: diamond.diamond_agent.tasks.start
        stop: diamond.diamond_agent.tasks.stop
        uninstall: diamond.diamond_agent.tasks.uninstall
      cloudify.interfaces.monitoring:
        start:
          implementation: diamond.diamond_agent.tasks.add_collectors
          inputs:
            collectors_config:
               CPUCollector: {}
               MemoryCollector: {}
               LoadAverageCollector: {}
               DiskUsageCollector:
                 config:
                   devices: x?vd[a-z]+[0-9]*$
               NetworkCollector: {}
  Server:
    type: alien.nodes.openstack.Compute
    properties: 
      flavor: 2
      image: 02ddfcbb-9534-44d7-974d-5cfd36dfbcab
      cloudify_agent: 
        user: ubuntu
    relationships:
      - target: InternalNetwork
        type: cloudify.relationships.connected_to
      - target: _a4c_InternalNetwork_subnet
        type: cloudify.relationships.depends_on
      - target: _a4c_floating_ip_Server_on_NetPub
        type: cloudify.openstack.server_connected_to_floating_ip
    interfaces:
      cloudify.interfaces.monitoring_agent:
        install:
          implementation: diamond.diamond_agent.tasks.install
          inputs:
            diamond_config:
               interval: 1
        start: diamond.diamond_agent.tasks.start
        stop: diamond.diamond_agent.tasks.stop
        uninstall: diamond.diamond_agent.tasks.uninstall
      cloudify.interfaces.monitoring:
        start:
          implementation: diamond.diamond_agent.tasks.add_collectors
          inputs:
            collectors_config:
               CPUCollector: {}
               MemoryCollector: {}
               LoadAverageCollector: {}
               DiskUsageCollector:
                 config:
                   devices: x?vd[a-z]+[0-9]*$
               NetworkCollector: {}
  _a4c_floating_ip_Server_on_NetPub:
    type: alien.nodes.openstack.PublicNetwork
    properties: 
      floatingip: 
        floating_network_name: net-pub
  InternalNetwork:
    type: alien.nodes.openstack.PrivateNetwork
    properties:
      resource_id: InternalNetwork

  _a4c_InternalNetwork_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      resource_id: InternalNetwork_subnet

      subnet: 
        ip_version: 4
        cidr: 192.168.1.0/24
    relationships:
      - target: InternalNetwork
        type: cloudify.relationships.contained_in

  Apache:
    type: alien.nodes.Apache
    instances:
      deploy: 1
    interfaces:
      cloudify.interfaces.lifecycle:
        start: wrapper/Apache/tosca.interfaces.node.lifecycle.Standard/start/artifacts/apache-type/scripts/_a4c_start_apache.py
        create: wrapper/Apache/tosca.interfaces.node.lifecycle.Standard/create/artifacts/apache-type/scripts/_a4c_install_apache.py
    relationships:
      - target: Server
        type: cloudify.relationships.contained_in
  PHP:
    type: alien.nodes.PHP
    instances:
      deploy: 1
    interfaces:
      cloudify.interfaces.lifecycle:
        create: wrapper/PHP/tosca.interfaces.node.lifecycle.Standard/create/artifacts/php-type/scripts/_a4c_install_php.py
    relationships:
      - target: Server
        type: cloudify.relationships.contained_in
  Wordpress:
    type: alien.nodes.Wordpress
    instances:
      deploy: 1
    interfaces:
      cloudify.interfaces.lifecycle:
        create: wrapper/Wordpress/tosca.interfaces.node.lifecycle.Standard/create/artifacts/wordpress-type/scripts/_a4c_install_wordpress.py
    relationships:
      - target: PHP
        type: alien.relationships.WordpressConnectToPHP
        source_interfaces:
          cloudify.interfaces.relationship_lifecycle:
            preconfigure: wrapper/Wordpress_PHP/wordpressConnectToPHPPHP/artifacts/wordpress-type/scripts/_a4c_install_php_module.py
      - target: Apache
        type: alien.relationships.WordpressHostedOnApache
        source_interfaces:
          cloudify.interfaces.relationship_lifecycle:
            preconfigure: wrapper/Wordpress_Apache/wordpressHostedOnApacheApache/artifacts/wordpress-type/scripts/_a4c_config_wordpress.py
      - target: Mysql
        type: alien.relationships.WordpressConnectToMysql
        source_interfaces:
          cloudify.interfaces.relationship_lifecycle:
            preconfigure: wrapper/Wordpress_Mysql/wordpressConnectToMysqlMysql/artifacts/wordpress-type/scripts/_a4c_config_wordpress_for_mysql.py
  Mysql:
    type: alien.nodes.Mysql
    instances:
      deploy: 1
    interfaces:
      cloudify.interfaces.lifecycle:
        start: wrapper/Mysql/tosca.interfaces.node.lifecycle.Standard/start/artifacts/mysql-type/scripts/_a4c_start_mysql.py
        create: wrapper/Mysql/tosca.interfaces.node.lifecycle.Standard/create/artifacts/mysql-type/scripts/_a4c_install_mysql.py
    relationships:
      - target: DataBase
        type: cloudify.relationships.contained_in





plugins:
  custom_wf_plugin:
    executor: central_deployment_agent
    source: custom_wf_plugin

workflows:
  a4c_install: custom_wf_plugin.plugin.workflows.a4c_install
  a4c_uninstall: custom_wf_plugin.plugin.workflows.a4c_uninstall
  a4c_scale:
    mapping: custom_wf_plugin.plugin.workflows.a4c_scale
    parameters:
      node_id:
        description: Which node (not node instance) to scale
      delta:
        description: >
            How many nodes should be added/removed.
            A positive number denotes increase of instances.
            A negative number denotes decrease of instances.
        default: 1
      scale_compute:
        description: >
            If a node name is passed as the `scalable_entity_name` parameter
            and that node is contained (transitively) within a compute node
            and this property is 'true', operate on the compute node instead
            of the specified node.
        default: true
      ignore_failure:
        default: false
  a4c_heal:
    mapping: custom_wf_plugin.plugin.workflows.a4c_heal
    parameters:
      node_instance_id:
        description: Which node instance has failed
      diagnose_value:
        description: Diagnosed reason of failure
        default: Not provided
